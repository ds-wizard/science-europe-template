<div id="q-share-restrictions" class="question">
  <h3>10. How and when will data be shared? Are there possible restrictions to data sharing or embargo reasons?</h3>

  <div class="answer">
    {# How data will be shared #}
    {# Produced datasets #}
    {%- set producedDataPath = [uuids.preservingCUuid, uuids.producedDataQUuid]|reply_path -%}
    {%- set producedDataItems = repliesMap[producedDataPath]|reply_items -%}
    <h4>How the data will be shared</h4>
    {%- if producedDataItems|length > 0 -%}
        <ul>
        {%- for i in producedDataItems -%}
            {%- set pathPrefix = [producedDataPath, i]|reply_path -%}
            {%- set producedDataName = repliesMap[[pathPrefix, uuids.producedDataNameQUuid]|reply_path]|reply_str_value -%}
            <li>
            <strong>{{ producedDataName if producedDataName else "(no name given)" }}</strong>
            {# If will be published #}
            {%- set isPublishedDataPath = [pathPrefix, uuids.isPublishedDataQUuid]|reply_path -%}
            {%- set isPublishedDataAUuid = repliesMap[isPublishedDataPath]|reply_str_value -%}
            {% if isPublishedDataAUuid == uuids.isPublishedDataNoAUuid %}
                (not published)
            {% elif isPublishedDataAUuid == uuids.isPublishedDataYesAUuid %}
                (published)
                {# Identifiers #}
                {% set identifiersPath = [pathPrefix, uuids.producedDataIdentifiersQUuid]|reply_path -%}
                {%- set identifiersItems = repliesMap[identifiersPath]|reply_items -%}
                {%- if identifiersItems|length > 0 -%}
                    <br>The dataset has the following identifiers:
                    <ul>
                    {%- for j in identifiersItems -%}
                        {%- set identifierPrefix = [identifiersPath, j]|reply_path -%}
                        {%- set identifierTypePath = [identifierPrefix, uuids.dataIdentifierTypeQUuid]|reply_path -%}
                        {%- set identifierTypeAUuid = repliesMap[identifierTypePath]|reply_str_value -%}
                        {%- set identifierValuePath = [identifierPrefix, uuids.dataIdentifierIdenfitierQUuid]|reply_path -%}
                        {%- set identifierValue = repliesMap[identifierValuePath]|reply_str_value -%}
                        {%- if identifierTypeAUuid == uuids.dataIdentifierTypeHandleAUuid -%}
                            <li>Handle: <strong>{{ identifierValue }}</strong></li>
                        {%- elif identifierTypeAUuid == uuids.dataIdentifierTypeDoiAUuid -%}
                            <li>DOI: <strong><a href="https://doi.org/{{ identifierValue }}" target="_blank">{{ identifierValue }}</a></strong></li>
                        {%- elif identifierTypeAUuid == uuids.dataIdentifierTypeArkAUuid -%}
                            <li>ARK: <strong>{{ identifierValue }}</strong></li>
                        {%- elif identifierTypeAUuid == uuids.dataIdentifierTypeUrlAUuid -%}
                            <li>URL: <strong><a href="{{ identifierValue }}" target="_blank">{{ identifierValue }}</a></strong></li>
                        {%- elif identifierTypeAUuid == uuids.dataIdentifierTypeOtherAUuid -%}
                            {%- set identifierType = repliesMap[[identifierTypePath, uuids.dataIdentifierTypeOtherAUuid, uuids.dataIdentifierTypeOtherTypeQUuid]|reply_path]|reply_str_value -%}
                            <li>{{ identifierType }}: <strong>{{ identifierValue }}</strong></li>
                        {%- endif -%}
                    {%- endfor -%}
                    </ul>
                {%- endif -%}
                {# Distributions #}
                {% set distrosPath = [isPublishedDataPath, uuids.isPublishedDataYesAUuid, uuids.publishedDistrosQUuid]|reply_path -%}
                {%- set distrosItems = repliesMap[distrosPath]|reply_items -%}
                {%- if distrosItems|length > 0 -%}
                    <br>The distributions will be available as follows:
                    <ul>
                    {%- for j in distrosItems -%}
                        {%- set distroPrefix = [distrosPath, j]|reply_path -%}
                        {%- set distroRepositoryKindPath = [distroPrefix, uuids.publishedDataRepositoryKindQUuid]|reply_path -%}
                        {%- set distroRepositoryKindAUuid = repliesMap[distroRepositoryKindPath]|reply_str_value -%}
                        {%- set distroSharePath = [distroPrefix, uuids.publishedDistroShareQUuid]|reply_path -%}
                        {%- set distroShareAUuid = repliesMap[distroSharePath]|reply_str_value -%}
                        {%- if distroRepositoryKindAUuid and distroShareAUuid -%}
                        <li>
                            {%- if distroShareAUuid == uuids.publishedDistroShareOpenAUuid %}
                                Open (shared with anyone)
                            {%- elif distroShareAUuid == uuids.publishedDistroShareSharedAUuid %}
                                Shared with a predefined list of people
                            {%- elif distroShareAUuid == uuids.publishedDistroShareClosedAUuid %}
                                Closed (not meant for sharing)
                            {%- endif %}
                            {% if distroRepositoryKindAUuid == uuids.publishedDataRepositoryDomainSpecificAUuid %}
                                using a domain-specific repository
                                {%- set domainSpecificRepoNamePath = [distroRepositoryKindPath, uuids.publishedDataRepositoryDomainSpecificAUuid, uuids.domainSpecificRepoNameQUuid]|reply_path -%}
                                {%- set domainSpecificRepoNameReply = repliesMap[domainSpecificRepoNamePath] -%}
                                {%- if domainSpecificRepoNameReply -%}
                                : {{ macros.integrationValue(domainSpecificRepoNameReply) }}.
                                {%- else -%}.
                                {% endif -%}
                                {# Contact the repository #}
                                {%- set domainSpecificRepoContactBeforePath = [distroRepositoryKindPath, uuids.publishedDataRepositoryDomainSpecificAUuid, uuids.domainSpecificRepoContactBeforeQUuid]|reply_path -%}
                                {%- set domainSpecificRepoContactBeforeAUuid = repliesMap[domainSpecificRepoContactBeforePath]|reply_str_value -%}
                                {%- if domainSpecificRepoContactBeforeAUuid == uuids.domainSpecificRepoContactBeforeNoAUuid %}
                                We don't need to contact the repository because it is a routine for us.
                                {%- elif domainSpecificRepoContactBeforeAUuid == uuids.domainSpecificRepoContactBeforeYesAlreadyAUuid %}
                                We have already contacted the repository.
                                {%- elif domainSpecificRepoContactBeforeAUuid == uuids.domainSpecificRepoContactBeforeYesWillAUuid %}
                                We are going to contact the repository.
                                {%- elif domainSpecificRepoContactBeforeAUuid == uuids.domainSpecificRepoContactBeforeOtherAUuid %}
                                {%- set domainSpecificRepoContactBeforeOtherPath = [domainSpecificRepoContactBeforePath, uuids.domainSpecificRepoContactBeforeOtherAUuid, uuids.domainSpecificRepoContactBeforeOtherQUuid]|reply_path -%}
                                {%- set domainSpecificRepoContactBeforeOther = repliesMap[domainSpecificRepoContactBeforeOtherPath]|reply_str_value %}
                                We have made other arrangements{{ ": " ~ domainSpecificRepoContactBeforeOther|dot if domainSpecificRepoContactBeforeOther else "." }}
                                {%- endif -%}
                            {%- elif distroRepositoryKindAUuid == uuids.publishedDataRepositoryNationalAUuid %}
                                using our national repository.
                            {%- elif distroRepositoryKindAUuid == uuids.publishedDataRepositoryInstitutionalAUuid %}
                                using our institutional repository.
                            {%- elif distroRepositoryKindAUuid == uuids.publishedDataRepositorySpecialAUuid %}
                                using a special-purpose repository for the project.
                            {%- endif -%}
                        {%- endif -%}
                        {# Licenses #}
                        {%- set licensesPath = [distroPrefix, uuids.publishedDataLicensesQUuid]|reply_path -%}
                        {%- set licensesItems = repliesMap[licensesPath]|reply_items -%}
                        {%- if licensesItems|length > 0 %}
                            The distribution will be available under the following {{ "licenses" if licensesItems|length > 1 else "license" }}:
                            <ul>
                            {%- for k in licensesItems -%}
                                <li>
                                {%- set licensePrefix = [licensesPath, k]|reply_path -%}
                                {%- set licenseStartPath = [licensePrefix, uuids.publishedDataLicenseStartQUuid]|reply_path -%}
                                {%- set licenseStart = repliesMap[licenseStartPath]|reply_str_value -%}
                                {% if licenseStart %}
                                    Starting {{ licenseStart }}: 
                                {% endif %}
                                
                                {%- set publishedDataLicensePath = [licensePrefix, uuids.publishedDataLicenseQUuid]|reply_path -%}
                                {%- set publishedDataLicenseAUuid = repliesMap[publishedDataLicensePath]|reply_str_value -%}
                                {%- if publishedDataLicenseAUuid == uuids.publishedDataLicenseCC0AUuid %}
                                    Freely available for any use (public domain or CC0).
                                {%- elif publishedDataLicenseAUuid == uuids.publishedDataLicenseCCBYAUuid %}
                                    Freely available with obligation to quote the source (e.g. CC-BY).
                                {%- elif publishedDataLicenseAUuid == uuids.publishedDataLicenseRestrictAUuid -%}
                                    {%- set licenseRestrictConditionsPath = [publishedDataLicensePath, uuids.publishedDataLicenseRestrictAUuid, uuids.licenseRestrictConditionsQUuid]|reply_path -%}
                                    {%- set licenseRestrictConditions = repliesMap[licenseRestrictConditionsPath]|reply_str_value -%}
                                    {%- set licenseRestrictLinkPath = [publishedDataLicensePath, uuids.publishedDataLicenseRestrictAUuid, uuids.licenseRestrictLinkQUuid]|reply_path -%}
                                    {%- set licenseRestrictLink = repliesMap[licenseRestrictLinkPath]|reply_str_value -%}
                                    {%- set licenseRestrictAccessPath = [publishedDataLicensePath, uuids.publishedDataLicenseRestrictAUuid, uuids.licenseRestrictAccessQUuid]|reply_path -%}
                                    {%- set licenseRestrictAccessAUuid = repliesMap[licenseRestrictAccessPath]|reply_str_value -%}
                                    {%- set licenseRestrictMetadataPath = [publishedDataLicensePath, uuids.publishedDataLicenseRestrictAUuid, uuids.licenseRestrictMetadataQUuid]|reply_path -%}
                                    {%- set licenseRestrictMetadataAUuid = repliesMap[licenseRestrictMetadataPath]|reply_str_value %}
                                    
                                    Available under some restrictions, which we will follow in our project{{ ": " ~ licenseRestrictConditions|dot if licenseRestrictConditions else "." }}
                                    {%- if licenseRestrictAccessAUuid == uuids.licenseRestrictAccessRequestAUuid %}
                                    Re-users will be able to get access by request to the contact person.
                                    {%- elif licenseRestrictAccessAUuid == uuids.licenseRestrictAccessCommitteeAUuid %}
                                    Re-users will be able to get access through a <em>Data Access Committee</em> for the project.
                                    {%- elif licenseRestrictAccessAUuid == uuids.licenseRestrictAccessAnotherAUuid -%}
                                    {%- set licenseRestrictAccessAnotherPath = [licenseRestrictAccessPath, uuids.licenseRestrictAccessAnotherAUuid, uuids.licenseRestrictAccessAnotherQUuid]|reply_path -%}
                                    {%- set licenseRestrictAccessAnother = repliesMap[licenseRestrictAccessAnotherPath]|reply_str_value %}
                                    Re-users will be able to get access through a specialized process{{ ": " ~ licenseRestrictAccessAnother|dot if licenseRestrictAccessAnother else "." }}
                                    {%- endif -%}
                                    {%- if licenseRestrictMetadataAUuid == uuids.licenseRestrictMetadataYesAUuid %}
                                    The conditions will be published as part of open metadata.
                                    {%- endif -%}
                                    {% if licenseRestrictLink %}
                                    More infomation about the restrictions can be found here: <a href="{{ licenseRestrictLink }}" target="_blank">{{ licenseRestrictLink }}</a>.
                                    {% endif %}
                                {%- endif -%}
                                </li>
                            {%- endfor -%}
                            </ul>
                        {%- endif -%}
                        </li>
                    {%- endfor -%}
                {%- endif -%}
                </ul>
            {%- endif -%}
            {# Catalogue #}
            {%- set publishedDataCataloguePath = [isPublishedDataPath, uuids.isPublishedDataYesAUuid, uuids.publishedDataCatalogueQUuid]|reply_path -%}
            {%- set publishedDataCatalogueAUuid = repliesMap[publishedDataCataloguePath]|reply_str_value -%}
            {%- if publishedDataCatalogueAUuid == uuids.publishedDataCatalogueYesAUuid -%}
                <br>We will be adding a reference to the published data to at least one data catalogue.
            {%- endif -%}
            {# When published #}
            {%- set publishedWhenPath = [isPublishedDataPath, uuids.isPublishedDataYesAUuid, uuids.publishedWhenQUuid]|reply_path -%}
            {%- set publishedWhenAUuid = repliesMap[publishedWhenPath]|reply_str_value -%}
            {%- if publishedWhenAUuid == uuids.publishedWhenSoonAUuid %}
                <br>The dataset will published as soon as possible after collecting it.
            {%- elif publishedWhenAUuid == uuids.publishedWhenCleanupAUuid %}
                <br>The dataset will published after initial cleanup.
            {%- elif publishedWhenAUuid == uuids.publishedWhenFinishedAUuid %}
                <br>The dataset will published after all our processing has finished.
            {%- elif publishedWhenAUuid == uuids.publishedWhenWrappedAUuid %}
                <br>The dataset will published when the project is wrapped up.
            {%- elif publishedWhenAUuid == uuids.publishedWhenEmbargoAUuid %}
                <br>The dataset will published after an embargo.
            {%- endif %}
            {# Qualified references #}
            {%- set publishedQReferencesPath = [isPublishedDataPath, uuids.isPublishedDataYesAUuid, uuids.publishedQReferencesQUuid]|reply_path -%}
            {%- set publishedQReferences = repliesMap[publishedQReferencesPath]|reply_items -%}
            {%- set qreferences = [] -%}
            {%- for item in publishedQReferences -%}
                {%- set refId = repliesMap[[publishedQReferencesPath, item, uuids.publishedQReferenceIdQUuid]|reply_path]|reply_str_value|e -%}
                {%- set refRel = repliesMap[[publishedQReferencesPath, item, uuids.publishedQReferenceRelQUuid]|reply_path]|reply_str_value|e -%}
                {%- if refId and refRel -%}
                    {%- do qreferences.append({
                    'id': refId,
                    'relation': refRel,
                    }) -%}
                {%- endif -%}
            {%- endfor -%}
            {%- if qreferences|length > 0 -%}
                <br>The following qualified references to other data sets will be included:
                <ul>
                    {%- for qref in qreferences -%}
                    <li><em>{{ qref.id|e }}</em> &ndash; {{ qref.relation|e }}</li>
                    {%- endfor -%}
                </ul>
            {%- endif -%}
            </li>
        {%- endfor -%}
        </ul>
    {%- endif -%}

    {# Restricitions #}

    <h4>Restrictions on data sharing</h4>
    <p>Ethical and legal restrictions are documented under Section 4. We have used the {{ globals.fullName }}, which made us aware of options to minimize the restrictions.</p>

    {%- set openImmediatelyPath = [uuids.accessCUuid, uuids.openImmediatelyQUuid]|reply_path -%}
    {%- set openImmediatelyAUuid = repliesMap[openImmediatelyPath]|reply_str_value -%}
    {%- if openImmediatelyAUuid == uuids.openImmediatelyYesAUuid -%}
      <p>No data sharing agreement will be required.</p>
    {%- elif openImmediatelyAUuid == uuids.openImmediatelyNoAUuid -%}
      {%- set pathPrefix = [openImmediatelyPath, uuids.openImmediatelyNoAUuid]|reply_path -%}
      {%- set embargoPath = [uuids.accessCUuid, uuids.limitedEmbargoQUuid]|reply_path -%}
      {%- set embargoAUuid = repliesMap[embargoPath]|reply_str_value -%}
      {%- if embargoAUuid == uuids.limitedEmbargoYesAUuid -%}
        {%- set embargoPeriodPath = [embargoPath, embargoAUuid, uuids.limitedEmbargoPeriodQUuid]|reply_path -%}
        {%- set embargoPeriod = repliesMap[embargoPeriodPath]|reply_str_value -%}
        <p>
          Data cannot be completely open due to legal reasons. But data that is not legally restrained will be released after a fixed time period.
          {%- if embargoPeriod %}
            The embargo period will be {{ embargoPeriod|dot }}
          {%- endif %}
        </p>
      {%- endif -%}

      {%- set legalReasonsAuthenticatedPath = [pathPrefix, uuids.notOpenLegalReasonsQUuid, uuids.notOpenLegalReasonsYesAUuid, uuids.legalReasonsAuthenticatedQUuid]|reply_path -%}
      {%- set legalReasonsAuthenticatedAUuid = repliesMap[legalReasonsAuthenticatedPath]|reply_str_value -%}
      {%- if legalReasonsAuthenticatedAUuid == uuids.legalReasonsAuthenticatedYesAUuid -%}
        <p>
          A data sharing agreement will be required.
          {%- set legalReasonsAuthorizePath = [legalReasonsAuthenticatedPath, uuids.legalReasonsAuthenticatedYesAUuid, uuids.legalReasonsAuthorizeQUuid]|reply_path -%}
          {%- set legalReasonsAuthorizeAUuid = repliesMap[legalReasonsAuthorizePath]|reply_str_value -%}
          {%- if legalReasonsAuthorizeAUuid == uuids.legalReasonsAuthorizeMemberAUuid %}
            People can apply to one of the project members.
          {%- elif legalReasonsAuthorizeAUuid == uuids.legalReasonsAuthorizeNewCommitteeAUuid %}
            People can apply to the data access committee that we will set up.
          {%- elif legalReasonsAuthorizeAUuid == uuids.legalReasonsAuthorizeOldCommitteeAUuid %}
            {%- set legalReasonsAuthorizeOldCommitteePath = [legalReasonsAuthorizePath, uuids.legalReasonsAuthorizeOldCommitteeAUuid, uuids.legalReasonsAuthorizeOldCommitteeQUuid]|reply_path -%}
            {%- set legalReasonsAuthorizeOldCommittee = repliesMap[legalReasonsAuthorizeOldCommitteePath]|reply_str_value -%}
            {%- if legalReasonsAuthorizeOldCommittee %}
              People can apply to the <em>{{ legalReasonsAuthorizeOldCommittee }}</em> data access committee.
            {%- else -%}
              People can apply to an existing data access committee.
            {%- endif -%}
          {%- elif legalReasonsAuthorizeAUuid == uuids.legalReasonsAuthorizeOtherAUuid %}
            {%- set legalReasonsAuthorizeOtherPath = [legalReasonsAuthorizePath, uuids.legalReasonsAuthorizeOtherAUuid, uuids.legalReasonsAuthorizeOtherQUuid]|reply_path -%}
            {%- set legalReasonsAuthorizeOther = repliesMap[legalReasonsAuthorizeOtherPath]|reply_str_value %}
            For the authorization of potential users, we will make special arrangements{{ ": " ~ legalReasonsAuthorizeOther|dot if legalReasonsAuthorizeOther else "." }}
          {%- endif -%}
        </p>
      {%- endif -%}
    {%- endif -%}

    {%- set collabPath = [uuids.creatingCUuid, uuids.collabQUuid]|reply_path -%}
    {%- set collabAUuid = repliesMap[collabPath]|reply_str_value -%}
    {%- if collabAUuid == uuids.collabNoAUuid -%}
      <p>We are not running the project in a collaboration between different groups nor institutes. Therefore, no collaboration agreement related to data access is needed.</p>
    {%- elif collabAUuid == uuids.collabYesAUuid -%}
      {%- set collabAgreePath = [collabPath, collabAUuid, uuids.collabAgreeQUuid]|reply_path -%}
      {%- set collabAgreeAUuid = repliesMap[collabAgreePath]|reply_str_value -%}
      {%- if collabAgreeAUuid == uuids.collabAgreeNoAUuid -%}
        <p>We are running the project in a collaboration between different groups and institutes. However, there is no collaboration agreement in the project that describes who can have access to what data.</p>
      {%- elif collabAgreeAUuid == uuids.collabAgreeYesAUuid -%}
        <p>We are running the project in a collaboration between different groups and institutes. A collaboration agreement that describes who can have access to what data in the project is set.</p>
      {%- endif -%}
    {%- endif -%}
  </div>
</div>
