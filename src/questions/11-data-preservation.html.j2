<div id="q-data-preservation" class="question">
  <h3>11. How will data for preservation be selected, and where data will be preserved long-term (for example a data repository or archive)?</h3>

  <div class="answer">
    {# Produced datasets #}
    {%- set producedDataPath = [uuids.preservingCUuid, uuids.producedDataQUuid]|reply_path -%}
    {%- set producedDataItems = repliesMap[producedDataPath]|reply_items -%}
    {%- if producedDataItems|length > 0 -%}
      <p>
      We plan to produce the following datasets:
      <ul>
      {%- for i in producedDataItems -%}
        {%- set pathPrefix = [producedDataPath, i]|reply_path -%}
        {%- set producedDataName = repliesMap[[pathPrefix, uuids.producedDataNameQUuid]|reply_path]|reply_str_value -%}
        <li>
          <strong>{{ producedDataName if producedDataName else "(no name given)" }}</strong>
          {# If will be published #}
          {%- set isPublishedDataPath = [pathPrefix, uuids.isPublishedDataQUuid]|reply_path -%}
          {%- set isPublishedDataAUuid = repliesMap[isPublishedDataPath]|reply_str_value -%}
          {% if isPublishedDataAUuid == uuids.isPublishedDataNoAUuid %}
            (not published)
          {% elif isPublishedDataAUuid == uuids.isPublishedDataYesAUuid %}
            (published)
          {% endif -%}
          {# How long will be stored + Metadata FAIRness #}
          {%- set publishedDataHowLongPath = [pathPrefix, uuids.publishedDataHowLongQUuid]|reply_path -%}
          {%- set publishedDataHowLongAUuid = repliesMap[publishedDataHowLongPath]|reply_str_value -%}
          {%- set publishedDataMetadataPersistentPath = [pathPrefix, uuids.publishedDataMetadataPersistentQUuid]|reply_path -%}
          {%- set publishedDataMetadataPersistentAUuid = repliesMap[publishedDataMetadataPersistentPath]|reply_str_value -%}
          {%- if publishedDataHowLongAUuid or (publishedDataMetadataPersistentAUuid == uuids.publishedDataMetadataPersistentYesAUuid) %}
            {% if publishedDataHowLongAUuid == uuids.publishedDataHowLongTechnicalAUuid -%}
              <p>This data set will be kept available as long as technically possible.</p>
            {%- elif publishedDataHowLongAUuid == uuids.publishedDataHowLongDeletedAUuid -%}
              <p> This data set will be kept available until it needs to be deleted for legal, contractual or regulatory reasons.</p>
            {%- elif publishedDataHowLongAUuid == uuids.publishedDataHowLongFixedAUuid -%}
              {%- set publishedDataHowLongFixedPath = [publishedDataHowLongPath, uuids.publishedDataHowLongFixedAUuid, uuids.publishedDataHowLongFixedQUuid]|reply_path -%}
              {%- set publishedDataHowLongFixed = repliesMap[publishedDataHowLongFixedPath]|reply_str_value -%}
              <p>This data set will be kept available for a fixed period (prepaid){{ " of: " ~ publishedDataHowLongFixed|dot if publishedDataHowLongFixed else "." }}</p>
            {%- endif -%}
            {%- if publishedDataMetadataPersistentAUuid == uuids.publishedDataMetadataPersistentYesAUuid %}
              <p>The metadata will be available even when the data no longer exists.</p>
            {%- endif -%}
          {%- endif -%}

           {# Distributions #}
          {% set distrosPath = [isPublishedDataPath, uuids.isPublishedDataYesAUuid, uuids.publishedDistrosQUuid]|reply_path -%}
          {%- set distrosItems = repliesMap[distrosPath]|reply_items -%}
          {%- if distrosItems|length > 0 -%}
            <p>The distributions will be stored in:</p>
            <ul>
            {%- for j in distrosItems -%}
              {%- set distroPrefix = [distrosPath, j]|reply_path -%}
              {%- set distroRepositoryKindPath = [distroPrefix, uuids.publishedDataRepositoryKindQUuid]|reply_path -%}
              {%- set distroRepositoryKindAUuid = repliesMap[distroRepositoryKindPath]|reply_str_value -%}
              {%- if distroRepositoryKindAUuid -%}
                <li>
                  {%- if distroRepositoryKindAUuid == uuids.publishedDataRepositoryDomainSpecificAUuid %}
                    Domain-specific repository
                    {%- set domainSpecificRepoNamePath = [distroRepositoryKindPath, uuids.publishedDataRepositoryDomainSpecificAUuid, uuids.domainSpecificRepoNameQUuid]|reply_path -%}
                    {%- set domainSpecificRepoNameReply = repliesMap[domainSpecificRepoNamePath] -%}
                    {%- if domainSpecificRepoNameReply -%}
                      : {{ macros.integrationValue(domainSpecificRepoNameReply) }}.
                    {%- else -%}.
                    {% endif -%}
                    {# Contact the repository #}
                    {%- set domainSpecificRepoContactBeforePath = [distroRepositoryKindPath, uuids.publishedDataRepositoryDomainSpecificAUuid, uuids.domainSpecificRepoContactBeforeQUuid]|reply_path -%}
                    {%- set domainSpecificRepoContactBeforeAUuid = repliesMap[domainSpecificRepoContactBeforePath]|reply_str_value -%}
                    {%- if domainSpecificRepoContactBeforeAUuid == uuids.domainSpecificRepoContactBeforeNoAUuid %}
                      We don't need to contact the repository because it is a routine for us.
                    {%- elif domainSpecificRepoContactBeforeAUuid == uuids.domainSpecificRepoContactBeforeYesAlreadyAUuid %}
                      We have already contacted the repository.
                    {%- elif domainSpecificRepoContactBeforeAUuid == uuids.domainSpecificRepoContactBeforeYesWillAUuid %}
                      We are going to contact the repository.
                    {%- elif domainSpecificRepoContactBeforeAUuid == uuids.domainSpecificRepoContactBeforeOtherAUuid %}
                      {%- set domainSpecificRepoContactBeforeOtherPath = [domainSpecificRepoContactBeforePath, uuids.domainSpecificRepoContactBeforeOtherAUuid, uuids.domainSpecificRepoContactBeforeOtherQUuid]|reply_path -%}
                      {%- set domainSpecificRepoContactBeforeOther = repliesMap[domainSpecificRepoContactBeforeOtherPath]|reply_str_value %}
                      We have made other arrangements instead of contacting the repository directly{{ ": " ~ domainSpecificRepoContactBeforeOther|dot if domainSpecificRepoContactBeforeOther else "." }}
                    {%- endif -%}
                  {%- elif distroRepositoryKindAUuid == uuids.publishedDataRepositoryGeneralPurposeAUuid %}
                    <em>General-purpose repository</em>
                    {%- set generalPurposeRepoNamePath = [distroRepositoryKindPath, uuids.publishedDataRepositoryGeneralPurposeAUuid, uuids.generalPurposeRepoNameQUuid]|reply_path -%}
                    {%- set generalPurposeRepoNameReply = repliesMap[generalPurposeRepoNamePath] -%}
                    {%- if generalPurposeRepoNameReply -%}
                      : {{ macros.integrationValue(generalPurposeRepoNameReply) }}.
                    {%- else -%}.
                    {% endif -%}
                  {%- elif distroRepositoryKindAUuid == uuids.publishedDataRepositoryNationalAUuid %}
                    Our national repository.
                  {%- elif distroRepositoryKindAUuid == uuids.publishedDataRepositoryInstitutionalAUuid %}
                    Our institutional repository.
                  {%- elif distroRepositoryKindAUuid == uuids.publishedDataRepositorySpecialAUuid %}
                    Special-purpose repository for the project.
                    {# Long-term support #}
                    {%- set specialRepoLongTermSupportPath = [distroRepositoryKindPath, uuids.publishedDataRepositorySpecialAUuid, uuids.specialRepoLongTermSupportQUuid]|reply_path -%}
                    {%- set specialRepoLongTermSupportAUuid = repliesMap[specialRepoLongTermSupportPath]|reply_str_value -%}
                    {%- if specialRepoLongTermSupportAUuid == uuids.specialRepoLongTermSupportYesAUuid %}
                      We will be able to support this repository for a sufficiently long time.
                    {%- endif -%}
                    {# Service level #}
                    {%- set specialRepoServiceLevelPath = [distroRepositoryKindPath, uuids.publishedDataRepositorySpecialAUuid, uuids.specialRepoServiceLevelQUuid]|reply_path -%}
                    {%- set specialRepoServiceLevelAUuid = repliesMap[specialRepoServiceLevelPath]|reply_str_value -%}
                    {%- if specialRepoServiceLevelAUuid == uuids.specialRepoServiceLevelDownloadAUuid %}
                      The repository will provide download-only service.
                    {%- elif specialRepoServiceLevelAUuid == uuids.specialRepoServiceLevelSimpleAUuid %}
                      The repository will provide a search and simple access interface.
                    {%- elif specialRepoServiceLevelAUuid == uuids.specialRepoServiceLevelAdvancedAUuid %}
                      The repository will provide an advanced processing service.
                    {%- endif -%}
                  {%- endif -%}
                </li>
              {%- endif -%}
            {%- endfor -%}
            </ul>
          {%- endif -%}
          {# Catalogue #}
          {%- set publishedDataCataloguePath = [isPublishedDataPath, uuids.isPublishedDataYesAUuid, uuids.publishedDataCatalogueQUuid]|reply_path -%}
          {%- set publishedDataCatalogueAUuid = repliesMap[publishedDataCataloguePath]|reply_str_value -%}
          {%- if publishedDataCatalogueAUuid == uuids.publishedDataCatalogueYesAUuid -%}
            <br>We will be adding a reference to the published data to at least one data catalogue.
          {%- endif -%}
        </li>
        <br>
      {%- endfor -%}
      </ul>
    {# Repository charges #}
    {%- set repoChargesPath = [uuids.preservingCUuid, uuids.repoChargesQUuid]|reply_path -%}
    {%- set repoChargesAUuid = repliesMap[repoChargesPath]|reply_str_value -%}
    {%- if repoChargesAUuid == uuids.repoChargesNoAUuid -%}
      <p>None of the used repositories charge for their services.</p>
    {%- elif repoChargesAUuid == uuids.repoChargesYesAUuid -%}
      {%- set repoChargesHowPayPath = [repoChargesPath, uuids.repoChargesYesAUuid, uuids.repoChargesHowPayQUuid]|reply_path -%}
      {%- set repoChargesHowPayAUuid = repliesMap[repoChargesHowPayPath]|reply_str_value -%}
      {%- if repoChargesHowPayAUuid == uuids.repoChargesHowPayBudgetedAUuid -%}
        <p>We have budgeted for the costs in the project to pay charges of the used repositories.</p>
      {%- elif repoChargesHowPayAUuid == uuids.repoChargesHowPayDepartmentAUuid -%}
        <p>The costs related to the used repositories will be carried by (one of) the departments involved in the project.</p>
      {%- elif repoChargesHowPayAUuid == uuids.repoChargesHowPayInstituteAUuid -%}
        <p>The costs related to the used repositories will be carried by (one of) the institutes involved in the project.</p>
      {%- elif repoChargesHowPayAUuid == uuids.repoChargesHowPayOtherAUuid -%}
        {%- set repoChargesHowPayOtherPath = [repoChargesHowPayPath, uuids.repoChargesHowPayOtherAUuid, uuids.repoChargesHowPayOtherQUuid]|reply_path -%}
        {%- set repoChargesHowPayOther = repliesMap[repoChargesHowPayOtherPath]|reply_str_value -%}
        {%- if repoChargesHowPayOther -%}
          <p>We will carry the costs related to the used repositories by: {{ repoChargesHowPayOther|dot }}</p>
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}
    {# Budget time and effort #}
    {%- set budgetTimeEffortPath = [uuids.preservingCUuid, uuids.budgetTimeEffortQUuid]|reply_path -%}
    {%- set budgetTimeEffortAUuid = repliesMap[budgetTimeEffortPath]|reply_str_value -%}
    {%- if budgetTimeEffortAUuid == uuids.budgetTimeEffortYesAUuid -%}
      <p>We have a reserved budget for the time and effort it will take to prepare the data for publication.</p>
    {%- endif -%}
  {%- endif -%}
  </div>
</div>