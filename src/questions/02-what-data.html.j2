<div id="q-what-data" class="question">
  <h3>2. What data (kind, format, volume) will be collected or produced?</h3>
  <div class="answer">

  {%- set measuredPath = [uuids.creatingCUuid, uuids.measuredQUuid]|reply_path -%}
  {%- set measuredAUuid = repliesMap[measuredPath]|reply_str_value -%}
  {%- if measuredAUuid == uuids.measuredYesAUuid -%}
    {%- set measuredDataPath = [measuredPath, uuids.measuredYesAUuid, uuids.measuredDataQUuid]|reply_path -%}
    {%- set measuredDataItems = repliesMap[measuredDataPath]|reply_items -%}
    {# Measured datasets #}
    {%- if measuredDataItems|length > 0 -%}
      <div>
      <h4>Instrument datasets</h4>
      The following instrument datasets will be acquired in the project:
      <ul>
        {%- for datasetItem in measuredDataItems -%}
          {%- set pathPrefix = [measuredDataPath, datasetItem]|reply_path -%}
          <li>
            {%- set measuredDataNamePath = [pathPrefix, uuids.measuredDataNameQUuid]|reply_path -%}
            {%- set measuredDataName = repliesMap[measuredDataNamePath]|reply_str_value -%}
            {%- set measuredDataWhoPath = [pathPrefix, uuids.measuredDataWhoQUuid]|reply_path -%}
            {%- set measuredDataWhoAUuid = repliesMap[measuredDataWhoPath]|reply_str_value -%}
            {%- set measuredDataEquipPath = [pathPrefix, uuids.measuredDataEquipQUuid]|reply_path -%}
            {%- set measuredDataEquipAUuid = repliesMap[measuredDataEquipPath]|reply_str_value -%}
            <strong>{{ measuredDataName if measuredDataName else "(no name given)" }}</strong>
            {# Who will collect #}
            {%- if measuredDataWhoAUuid == uuids.measuredDataWhoExpertsOwnAUuid -%}
              <p>This dataset will be collected by experts in the project, with our own equipment.</p>
            {%- elif measuredDataWhoAUuid == uuids.measuredDataWhoExpertsOutAUuid -%}
              <p>This dataset will be collected by experts in the project, at a specialized infrastructure.</p>
            {%- elif measuredDataWhoAUuid == uuids.measuredDataWhoExternalAUuid -%}
              {%- set mdExternalOwnershipPath = [measuredDataWhoPath, uuids.measuredDataWhoExternalAUuid, uuids.mdExternalOwnershipQUuid]|reply_path -%}
              {%- set mdExternalOwnershipAUuid = repliesMap[mdExternalOwnershipPath]|reply_str_value -%}
              <p>
                This dataset will be collected by an external party.
                {% if mdExternalOwnershipAUuid == uuids.mdExternalOwnershipPartyAUuid -%}
                  The ownership of the resulting data will remain with the external party.
                {%- elif mdExternalOwnershipAUuid == uuids.mdExternalOwnershipPartnersAUuid -%}
                  The project partners acquire full ownership of the data.
                {%- elif mdExternalOwnershipAUuid == uuids.mdExternalOwnershipOtherAUuid -%}
                  {%- set mdExternalOwnershipOtherPath = [mdExternalOwnershipPath, uuids.mdExternalOwnershipOtherAUuid, uuids.mdExternalOwnershipOtherQUuid]|reply_path -%}
                  {%- set mdExternalOwnershipOther = repliesMap[mdExternalOwnershipOtherPath]|reply_str_value -%}
                  {%- if mdExternalOwnershipOther -%}
                    For the ownership of the data we have made the following arrangements: {{ mdExternalOwnershipOther|dot }}
                  {%- endif -%}
                {%- endif -%}
              </p>
            {%- endif -%}
            {# Equipment standard? #}
            {% if measuredDataEquipAUuid == uuids.measuredDataEquipDescribedAUuid -%}
              <p>The equipment is very well described and known.</p>
            {%- elif measuredDataEquipAUuid == uuids.measuredDataEquipCareAUuid -%}
              <p>The equipment is less well described or not completely standard, so we will need to take extra care documenting the process.</p>
            {%- endif -%}
          </li>
        {%- endfor -%}
      </ul>
      </div>
    {%- endif -%}
  {%- endif -%}

  {# Non-equipment datasets #}
  {%- set neqDataPath = [uuids.creatingCUuid, uuids.neqDataQUuid]|reply_path -%}
  {%- set neqDataAUuid = repliesMap[neqDataPath]|reply_str_value -%}
  {%- if neqDataAUuid == uuids.neqDataYesAUuid -%}
    {%- set neqDataPrefix = [neqDataPath, uuids.neqDataYesAUuid]|reply_path -%}
    {%- set neqDataQuestPath = [neqDataPrefix, uuids.neqDataQuestQUuid]|reply_path -%}
    {%- set neqDataQuestAUuid = repliesMap[neqDataQuestPath]|reply_str_value -%}
    {%- set neqDataCaseReportPath = [neqDataPrefix, uuids.neqDataCaseReportQUuid]|reply_path -%}
    {%- set neqDataCaseReportAUuid = repliesMap[neqDataCaseReportPath]|reply_str_value -%}
    {%- set neqDataERecordsPath = [neqDataPrefix, uuids.neqDataERecordsQUuid]|reply_path -%}
    {%- set neqDataERecordsAUuid = repliesMap[neqDataERecordsPath]|reply_str_value -%}
    {%- set neqDataSetsPath = [neqDataPrefix, uuids.neqDataSetsQUuid]|reply_path -%}
    {%- set neqDataSetsItems = repliesMap[neqDataSetsPath]|reply_items -%}

    {%- set questionnaires = neqDataQuestAUuid == uuids.neqDataQuestYesAUuid -%}
    {%- set caseReport = neqDataCaseReportAUuid == uuids.neqDataCaseReportYesAUuid -%}
    {%- set eRecords = neqDataERecordsAUuid == uuids.neqDataERecordsYesAUuid -%}
    {%- if questionnaires or caseReport or eRecords or neqDataSetsItems|length > 0 -%}
      <div>
      <h4>Non-equipment datasets</h4>
      {# Types #}
      {%- set typesNames = [] -%}
      {%- if questionnaires -%}{%- do typesNames.append("questionnaires") -%}{%- endif -%}
      {%- if caseReport -%}{%- do typesNames.append("case report forms") -%}{%- endif -%}
      {%- if eRecords -%}{%- do typesNames.append("electronic patient records") -%}{%- endif -%}
      {%- set typesCount = typesNames|length -%}
      <p>
        {%- if typesCount > 0 -%}
          We also collect data from
          {% if typesCount == 1 -%}
              {{ typesNames[0] }}.
          {%- elif typesCount == 2 -%}
              {{ typesNames[0] }} and {{ typesNames[1] }}.
          {%- else -%}
              {{ typesNames[0] }}, {{ typesNames[1] }}, and {{ typesNames[2] }}.
          {%- endif -%}
        {% endif %}
        {# Datasets #}
        {%- if neqDataSetsItems|length > 0 -%}
          The non-equipment datasets are:
          <ul>
          {%- for neqDataSetItem in neqDataSetsItems -%}
            {%- set pathPrefix = [neqDataSetsPath, neqDataSetItem]|reply_path -%}
            {%- set neqDataSetsName = repliesMap[[pathPrefix, uuids.neqDataSetsNameQUuid]|reply_path]|reply_str_value -%}
            {%- set neqDataSetsDesc = repliesMap[[pathPrefix, uuids.neqDataSetsDescQUuid]|reply_path]|reply_str_value -%}
            <li>
              <strong>{{ neqDataSetsName if neqDataSetsName else "(no name given)" }}</strong>
              {% if neqDataSetsDesc -%}<span class="separator">&ndash;</span> {{ neqDataSetsDesc }}{%- endif -%}
            </li>
          {%- endfor -%}
          </ul>
        {%- endif -%}
      </p>
      </div>
    {%- endif -%}
  {%- endif -%}
  {# Existing datasets #}
  {%- set preexistingPath = [uuids.reusingCUuid, uuids.preexistingQUuid]|reply_path -%}
  {%- set preexistingAUuid = repliesMap[preexistingPath]|reply_str_value -%}
  {%- if preexistingAUuid == uuids.preexistingYesAUuid -%}
    {%- set refDataPath = [preexistingPath, uuids.preexistingYesAUuid, uuids.refDataQUuid]|reply_path -%}
    {%- set refDataItems = repliesMap[refDataPath]|reply_items -%}
    {%- set nrefDataPath = [preexistingPath, uuids.preexistingYesAUuid, uuids.nrefDataQUuid]|reply_path -%}
    {%- set nrefDataItems = repliesMap[nrefDataPath]|reply_items -%}
    {%- if (refDataItems|length + nrefDataItems|length) > 0 -%}
      <div>
        <h4>Re-used datasets</h4>
        {%- if refDataItems|length > 0 -%}
          <div>We have found the following reference datasets that we have considered for re-use:
          <ul>
            {%- for refDataItem in refDataItems -%}
              {%- set refDataPrefix = [refDataPath, refDataItem]|reply_path -%}
              {%- set refDataUsedPrefix = [refDataPrefix, uuids.refDataUseQUuid, uuids.refDataUseYesAUuid]|reply_path -%}
              {%- set refDataNameReply = repliesMap[[refDataPrefix, uuids.refDataNameQUuid]|reply_path] -%}
              {%- set refDataWhere = repliesMap[[refDataPrefix, uuids.refDataWhereQUuid]|reply_path]|reply_str_value -%}
              <li>
                {# identification #}
                <div>{{ macros.integrationValue(refDataNameReply) }}</div>
                {%- if refDataWhere -%}
                  <p>
                  {%- if refDataWhere.startswith("http://") or refDataWhere.startswith("https://") or refDataWhere.startswith("ftp://") %}
                    It is available via: <a href="{{ refDataWhere }}" target="_blank">{{ refDataWhere }}</a>.
                  {%- else %}
                    It is available via: {{ refDataWhere }}.
                  {%- endif -%}
                  </p>
                {%- endif -%}
                {# version #}
                {%- set refDataVersionedPath = [refDataUsedPrefix, uuids.refDataVersionedQUuid]|reply_path -%}
                {%- set refDataVersionedAUuid = repliesMap[refDataVersionedPath]|reply_str_value -%}
                {%- if refDataVersionedAUuid == uuids.refDataVersionedYesAUuid -%}
                  {%- set refDataVersionedWhichPath = [refDataVersionedPath, uuids.refDataVersionedYesAUuid, uuids.refDataVersionedWhichQUuid]|reply_path -%}
                  {%- set refDataVersionedWhich = repliesMap[refDataVersionedWhichPath]|reply_str_value -%}
                  {%- set refDataVersionedChangePath = [refDataVersionedPath, uuids.refDataVersionedYesAUuid, uuids.refDataVersionedChangeQUuid]|reply_path -%}
                  {%- set refDataVersionedChangeAUuid = repliesMap[refDataVersionedChangePath]|reply_str_value -%}
                  {%- if refDataVersionedWhich or refDataVersionedChangeAUuid  %}
                    <p>
                    {% if refDataVersionedWhich -%}
                      We will use version "{{ refDataVersionedWhich }}" of this dataset.
                    {%- endif -%}
                    {%- if refDataVersionedChangeAUuid == uuids.refDataVersionedChangeStayAUuid %}
                      If a new version becomes available during the project, we will stay with the old version.
                    {%- elif refDataVersionedChangeAUuid == uuids.refDataVersionedChangeNewAUuid %}
                      If a new version becomes available during the project, new analyses will be done with the new version.
                    {%- elif refDataVersionedChangeAUuid == uuids.refDataVersionedChangeAllAUuid %}
                      If a new version becomes available during the project, all analyses will be redone with the new version.
                    {%- endif -%}
                    </p>
                  {%- endif -%}
                {%- endif -%}
              </li>
            {%- endfor -%}
          </ul>
          </div>
        {%- endif -%}
        {%- if nrefDataItems|length > 0 -%}
          <div>We have found the following non-reference datasets that we have considered for re-use:
          <ul>
            {%- for nrefDataItem in nrefDataItems -%}
              {%- set nrefDataNamePath = [nrefDataPath, nrefDataItem, uuids.nrefDataNameQUuid]|reply_path -%}
              {%- set nrefDataNameReply = repliesMap[nrefDataNamePath] -%}
              {%- set nrefDataWhere = repliesMap[[nrefDataPrefix, uuids.nrefDataWhereQUuid]|reply_path]|reply_str_value -%}
              <li>
                {# identification #}
                <div>{{ macros.integrationValue(nrefDataNameReply) }}</div>
                {%- if nrefDataWhere -%}
                  <p>
                  {%- if nrefDataWhere.startswith("http://") or nrefDataWhere.startswith("https://") or nrefDataWhere.startswith("ftp://") %}
                    It is available via: <a href="{{ nrefDataWhere }}" target="_blank">{{ nrefDataWhere }}</a>.
                  {%- else %}
                    It is available via: {{ nrefDataWhere }}.
                  {%- endif -%}
                  </p>
                {%- endif -%}
                {# version #}
                {%- set refDataVersionedPath = [refDataUsedPrefix, uuids.refDataVersionedQUuid]|reply_path -%}
                {%- set refDataVersionedAUuid = repliesMap[refDataVersionedPath]|reply_str_value -%}
                {%- if refDataVersionedAUuid == uuids.refDataVersionedYesAUuid -%}
                  {%- set refDataVersionedWhichPath = [refDataVersionedPath, uuids.refDataVersionedYesAUuid, uuids.refDataVersionedWhichQUuid]|reply_path -%}
                  {%- set refDataVersionedWhich = repliesMap[refDataVersionedWhichPath]|reply_str_value -%}
                  {%- set refDataVersionedChangePath = [refDataVersionedPath, uuids.refDataVersionedYesAUuid, uuids.refDataVersionedChangeQUuid]|reply_path -%}
                  {%- set refDataVersionedChangeAUuid = repliesMap[refDataVersionedChangePath]|reply_str_value -%}
                  {%- if refDataVersionedWhich or refDataVersionedChangeAUuid  %}
                    <p>
                    {% if refDataVersionedWhich -%}
                      We will use version "{{ refDataVersionedWhich }}" of this dataset.
                    {%- endif -%}
                    {%- if refDataVersionedChangeAUuid == uuids.refDataVersionedChangeStayAUuid %}
                      If a new version becomes available during the project, we will stay with the old version.
                    {%- elif refDataVersionedChangeAUuid == uuids.refDataVersionedChangeNewAUuid %}
                      If a new version becomes available during the project, new analyses will be done with the new version.
                    {%- elif refDataVersionedChangeAUuid == uuids.refDataVersionedChangeAllAUuid %}
                      If a new version becomes available during the project, all analyses will be redone with the new version.
                    {%- endif -%}
                    </p>
                  {%- endif -%}
                {%- endif -%}
                {# data use #}
                {%- set dataUse = repliesMap[[refDataUsedPrefix, uuids.refDataUsageQUuid]|reply_path]|reply_str_value -%}
                {%- if dataUse -%}
                <p>We will use the dataset as follows: {{ dataUse|dot }}</p>
                {%- endif -%}
              </li>
            {%- endfor -%}
          </ul>
          </div>
        {%- endif -%}
        {%- if usedNRefDataItems|length > 0 -%}
          <div>We will use the following already existing non-reference datasets:
          <ul>
            {%- for nrefDataItem in usedNRefDataItems -%}
              {%- set nrefDataPrefix = [nrefDataPath, nrefDataItem]|reply_path -%}
              {%- set nrefDataUsedPrefix = [nrefDataPrefix, uuids.nrefDataUseQUuid, uuids.nrefDataUseYesAUuid]|reply_path -%}
              {%- set nrefDataNamePath = [nrefDataPrefix, uuids.nrefDataNameQUuid]|reply_path -%}
              {%- set nrefDataNameReply = repliesMap[nrefDataNamePath] -%}
              {%- set nrefDataWhere = repliesMap[[nrefDataPrefix, uuids.nrefDataWhereQUuid]|reply_path]|reply_str_value -%}
              <li>
                {# identification #}
                <div>{{ macros.integrationValue(nrefDataNameReply) }}</div>
                {%- if nrefDataWhere -%}
                  <p>
                  {%- if nrefDataWhere.startswith("http://") or nrefDataWhere.startswith("https://") or nrefDataWhere.startswith("ftp://") %}
                    It is available via: <a href="{{ nrefDataWhere }}" target="_blank">{{ nrefDataWhere }}</a>.
                  {%- else %}
                    It is available via: {{ nrefDataWhere }}.
                  {%- endif -%}
                  </p>
                {%- endif -%}
                {# data access #}
                {%- set nrefDataAccessPath = [nrefDataUsedPrefix, uuids.nrefDataAccessQUuid]|reply_path -%}
                {%- set nrefDataAccessAUuid = repliesMap[nrefDataAccessPath]|reply_str_value -%}
                {%- if nrefDataAccessAUuid %}
                  <p>
                  {% if nrefDataAccessAUuid == uuids.nrefDataAccessHaveCopyAUuid -%}
                    We already have a copy of this dataset.
                  {%- elif nrefDataAccessAUuid == uuids.nrefDataAccessWillDownloadAUuid -%}
                    We will download or get a copy.
                  {%- elif nrefDataAccessAUuid == uuids.nrefDataAccessWillOnlineAUuid -%}
                    We will use its online version without downloading it.
                  {%- endif -%}
                  </p>
                {%- endif -%}
                {# data use #}
                {%- set dataUse = repliesMap[[nrefDataUsedPrefix, uuids.nrefDataUsageQUuid]|reply_path]|reply_str_value -%}
                {%- if dataUse -%}
                <p>We will use the dataset as follows: {{ dataUse|dot }}</p>
                {%- endif -%}
              </li>
            {%- endfor -%}
          </ul>
          </div>
        {%- endif -%}
      </div>
    {%- endif -%}
  {%- endif -%}

  {# Format/Type with volume #}
  {%- set formatsPath = [uuids.creatingCUuid, uuids.formatsQUuid]|reply_path -%}
  {%- set formatsItems = repliesMap[formatsPath]|reply_items -%}
  {%- if formatsItems|length > 0 -%}
    <h4>Data formats and types</h4>
    <div>We will be using the following data formats and types:
    <ul>
      {%- for formatItem in formatsItems -%}
        {%- set formatPrefix = [formatsPath, formatItem]|reply_path -%}
        {%- set formatNameReply = repliesMap[[formatPrefix, uuids.formatsNameQUuid]|reply_path] -%}
        {%- set formatsIsStandardPath = [formatPrefix, uuids.formatsIsStandardQUuid]|reply_path -%}
        {%- set formatsIsStandardAUuid = repliesMap[formatsIsStandardPath]|reply_str_value -%}
        {%- set formatsIsLTSuitablePath = [formatPrefix, uuids.formatsIsLTSuitableQUuid]|reply_path -%}
        {%- set formatsIsLTSuitableAUuid = repliesMap[formatsIsLTSuitablePath]|reply_str_value -%}
        {%- set formatsVolumePath = [formatPrefix, uuids.formatsVolumeQUuid]|reply_path -%}
        {%- set formatsVolumeAUuid = repliesMap[formatsVolumePath]|reply_str_value -%}
        <li>
          {# identification #}
          <div>{{ macros.integrationValue(formatNameReply) }}</div>
          {%- if formatsIsStandardAUuid or formatsIsLTSuitableAUuid or formatsVolumeAUuid -%}
            <p>
            {# standard? #}
            {%- if formatsIsStandardAUuid == uuids.formatsIsStandardYesAUuid %}
              It is a standardized format.
            {%- elif formatsIsStandardAUuid == uuids.formatsIsStandardNoAUuid -%}
              {%- set formatsWhyNonStandardPath = [formatsIsStandardPath, uuids.formatsIsStandardNoAUuid, uuids.formatsWhyNonStandardQUuid]|reply_path -%}
              {%- set formatsWhyNonStandardAUuid = repliesMap[formatsWhyNonStandardPath]|reply_str_value -%}
              {%- if formatsWhyNonStandardAUuid == uuids.formatsWhyNSThereIsNoStandardAUuid %}
                It is not a standardized format because there is no standardized format for this data type.
              {%- elif formatsWhyNonStandardAUuid == uuids.formatsWhyNSItIsOptimizedAUuid %}
                It is not a standardized format but it is optimized for processing speed and/or volume.
              {%- elif formatsWhyNonStandardAUuid == uuids.formatsWhyNSAnotherReasonAUuid -%}
                {%- set formatsWhyNSAnotherReasonPath = [formatsWhyNonStandardPath, uuids.formatsWhyNSAnotherReasonAUuid, uuids.formatsWhyNSAnotherReasonQUuid]|reply_path -%}
                {%- set formatsWhyNSAnotherReason = repliesMap[formatsWhyNSAnotherReasonPath]|reply_str_value -%}
                It is not a standardized format.
                {%- if formatsWhyNSAnotherReason %}
                  {{ formatsWhyNSAnotherReason|capitalize|dot }}
                {%- endif -%}
              {%- endif -%}
            {%- endif -%}
            {# long-term suitable? #}
            {%- if formatsIsLTSuitableAUuid == uuids.formatsIsLTSuitableYesAUuid %}
              This is a suitable format for long-term archiving.
            {%- elif formatsIsLTSuitableAUuid == uuids.formatsIsLTSuitableNoAUuid -%}
              {%- set formatsConvertLTSuitablePath = [formatsIsLTSuitablePath, uuids.formatsIsLTSuitableNoAUuid, uuids.formatsConvertLTSuitableQUuid]|reply_path -%}
              {%- set formatsConvertLTSuitableAUuid = repliesMap[formatsConvertLTSuitablePath]|reply_str_value -%}
              {%- if formatsConvertLTSuitableAUuid == uuids.formatsConvertLTSuitableYesAUuid %}
                This is not a suitable format for long-term archiving; however, we plan to convert it to a suitable format before the end of the project.
              {%- elif formatsConvertLTSuitableAUuid == uuids.formatsConvertLTSuitableNoAUuid %}
                We are aware that this is not a suitable format for long-term archiving.
              {%- endif -%}
            {%- endif -%}
            {# volume #}
            {%- if formatsVolumeAUuid == uuids.formatsVolumeSmallAUuid %}
              We will have only a small amount of data stored in this format.
            {%- elif formatsVolumeAUuid == uuids.formatsVolumeTotalAUuid -%}
              {%- set formatsVolumeTotalGB = repliesMap[[formatsVolumePath, uuids.formatsVolumeTotalAUuid, uuids.formatsVolumeTotalGBQUuid]|reply_path]|reply_str_value -%}
              {%- if formatsVolumeTotalGB %}
                We expect to have {{ formatsVolumeTotalGB }} GB of data in this format.
              {%- endif -%}
            {%- elif formatsVolumeAUuid == uuids.formatsVolumeFileSizeAUuid -%}
              {%- set formatsVolumeFiles = repliesMap[[formatsVolumePath, uuids.formatsVolumeFileSizeAUuid, uuids.formatsVolumeFilesQUuid]|reply_path]|reply_str_value -%}
              {%- set formatsVolumeFileGB = repliesMap[[formatsVolumePath, uuids.formatsVolumeFileSizeAUuid, uuids.formatsVolumeFileGBQUuid]|reply_path]|reply_str_value -%}
              {%- if formatsVolumeFiles and formatsVolumeFileGB %}
                We expect to have {{ formatsVolumeFiles }} files of average size {{ formatsVolumeFileGB }} GB (i.e. approximately {{ (formatsVolumeFiles|int * formatsVolumeFileGB|float)|round(2) }} GB in total).
              {%- endif -%}
            {%- endif -%}
            </p>
          {%- endif -%}
        </li>
      {%- endfor -%}
    </ul>
    </div>
  {%- endif -%}
  </div>
</div>
