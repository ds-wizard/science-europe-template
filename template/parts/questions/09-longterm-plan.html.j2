<div id="q-longterm-plan" class="question">
  <h3>What is the longterm preservation plan for the dataset?</h3>
  {%- scope -%}
  <div class="answer">
    {# Published datasets #}
    {%- set publishedDataPath = join([preservingCUuid, publishedDataQUuid], ".") -%}
    {%- set publishedDataCount = repliesMap[publishedDataPath].value.value -%}
    {%- if publishedDataCount && publishedDataCount > 0 -%}
      <ul>
      {%- for i in range(publishedDataCount-1) -%}
        {%- set pathPrefix = join([publishedDataPath, i], ".") -%}
        {%- set publishedDataName = repliesMap[join([pathPrefix, publishedDataNameQUuid], ".")].value.value -%}
        {%- set publishedDataRepositoryKindPath = join([pathPrefix, publishedDataRepositoryKindQUuid], ".") -%}
        {%- set publishedDataRepositoryKindAUuid = repliesMap[publishedDataRepositoryKindPath].value.value -%}
        {%- set publishedDataCataloguePath = join([pathPrefix, publishedDataCatalogueQUuid], ".") -%}
        {%- set publishedDataCatalogueAUuid = repliesMap[publishedDataCataloguePath].value.value -%}
        {%- if publishedDataRepositoryKindAUuid || publishedDataCatalogueAUuid -%}
          <li>
            <strong>{{ publishedDataName ? publishedDataName : "(no name given)" }}</strong>
            {%- if publishedDataRepositoryKindAUuid %}
              will be stored in
              {%- if publishedDataRepositoryKindAUuid == publishedDataRepositoryDomainSpecificAUuid %}
                a domain-specific repository
                {%- set domainSpecificRepoNamePath = join([publishedDataRepositoryKindPath, publishedDataRepositoryDomainSpecificAUuid, domainSpecificRepoNameQUuid], ".") -%}
                {%- set domainSpecificRepoNameReply = repliesMap[domainSpecificRepoNamePath] -%}
                {%- if domainSpecificRepoNameReply -%}
                  : {{ integrationValue(domainSpecificRepoNameReply, domainSpecificRepoNameQUuid) }}.
                {%- else -%}.
                {% endif -%}
                {# Contact the repository #}
                {%- set domainSpecificRepoContactBeforePath = join([publishedDataRepositoryKindPath, publishedDataRepositoryDomainSpecificAUuid, domainSpecificRepoContactBeforeQUuid], ".") -%}
                {%- set domainSpecificRepoContactBeforeAUuid = repliesMap[domainSpecificRepoContactBeforePath].value.value -%}
                {%- if domainSpecificRepoContactBeforeAUuid == domainSpecificRepoContactBeforeNoAUuid %}
                  We don't need to contact the repository because it is a routine for us.
                {%- elif domainSpecificRepoContactBeforeAUuid == domainSpecificRepoContactBeforeYesAlreadyAUuid %}
                  We have already contacted the repository.
                {%- elif domainSpecificRepoContactBeforeAUuid == domainSpecificRepoContactBeforeYesWillAUuid %}
                  We are going to contact the repository.
                {%- elif domainSpecificRepoContactBeforeAUuid == domainSpecificRepoContactBeforeOtherAUuid %}
                  {%- set domainSpecificRepoContactBeforeOtherPath = join([domainSpecificRepoContactBeforePath, domainSpecificRepoContactBeforeOtherAUuid, domainSpecificRepoContactBeforeOtherQUuid], ".") -%}
                  {%- set domainSpecificRepoContactBeforeOther = repliesMap[domainSpecificRepoContactBeforeOtherPath].value.value %}
                  We have made other arrangements{{ domainSpecificRepoContactBeforeOther ? ": " ~ domainSpecificRepoContactBeforeOther : "" }}{{ endswith(domainSpecificRepoContactBeforeOther, ".") ? "" : "." }}
                {%- endif -%}
              {%- elif publishedDataRepositoryKindAUuid == publishedDataRepositoryNationalAUuid %}
                our national repository.
              {%- elif publishedDataRepositoryKindAUuid == publishedDataRepositoryInstitutionalAUuid %}
                our institutional repository.
              {%- elif publishedDataRepositoryKindAUuid == publishedDataRepositorySpecialAUuid %}
                a special-purpose repository for the project.
                {# Long-term support #}
                {%- set specialRepoLongTermSupportPath = join([publishedDataRepositoryKindPath, publishedDataRepositorySpecialAUuid, specialRepoLongTermSupportQUuid], ".") -%}
                {%- set specialRepoLongTermSupportAUuid = repliesMap[specialRepoLongTermSupportPath].value.value -%}
                {%- if specialRepoLongTermSupportAUuid == specialRepoLongTermSupportYesAUuid %}
                  We will be able to support this repository for a sufficiently long time.
                {%- endif -%}
                {# Service level #}
                {%- set specialRepoServiceLevelPath = join([publishedDataRepositoryKindPath, publishedDataRepositorySpecialAUuid, specialRepoServiceLevelQUuid], ".") -%}
                {%- set specialRepoServiceLevelAUuid = repliesMap[specialRepoServiceLevelPath].value.value -%}
                {%- if specialRepoServiceLevelAUuid == specialRepoServiceLevelDownloadAUuid %}
                  The repository will provide download-only service.
                {%- elif specialRepoServiceLevelAUuid == specialRepoServiceLevelSimpleAUuid %}
                  The repository will provice a search and simple access interface.
                {%- elif specialRepoServiceLevelAUuid == specialRepoServiceLevelAdvancedAUuid %}
                  The repository will provide an advanced processing service.
                {%- endif -%}
              {%- endif -%}
            {%- endif -%}
            {%- if publishedDataCatalogueAUuid == publishedDataCatalogueYesAUuid -%}
              {%- if publishedDataRepositoryKindAUuid %}
                We
              {%- else %}
                <span class="separator">&ndash;</span> we
              {%- endif %}
              will be adding a reference to the published data to at least one data catalogue.
            {%- endif -%}
          </li>
        {%- endif -%}
      {%- endfor -%}
      </ul>
    {%- endif -%}
    {# Repository charges #}
    {%- set repoChargesPath = join([preservingCUuid, repoChargesQUuid], ".") -%}
    {%- set repoChargesAUuid = repliesMap[repoChargesPath].value.value -%}
    {%- if repoChargesAUuid == repoChargesNoAUuid -%}
      <p>None of the used repositories charge for their services.</p>
    {%- elif repoChargesAUuid == repoChargesYesAUuid -%}
      {%- set repoChargesHowPayPath = join([repoChargesPath, repoChargesYesAUuid, repoChargesHowPayQUuid], ".") -%}
      {%- set repoChargesHowPayAUuid = repliesMap[repoChargesHowPayPath].value.value -%}
      {%- if repoChargesHowPayAUuid == repoChargesHowPayBudgetedAUuid -%}
        <p>We have budgeted for the costs in the project to pay charges of the used repositories.</p>
      {%- elif repoChargesHowPayAUuid == repoChargesHowPayDepartmentAUuid -%}
        <p>The costs related to the used repositories will be carried by (one of) the departments involved in the project.</p>
      {%- elif repoChargesHowPayAUuid == repoChargesHowPayInstituteAUuid -%}
        <p>The costs related to the used repositories will be carried by (one of) the institutes involved in the project.</p>
      {%- elif repoChargesHowPayAUuid == repoChargesHowPayOtherAUuid -%}
        {%- set repoChargesHowPayOtherPath = join([repoChargesHowPayPath, repoChargesHowPayOtherAUuid, repoChargesHowPayOtherQUuid], ".") -%}
        {%- set repoChargesHowPayOther = repliesMap[repoChargesHowPayOtherPath].value.value -%}
        {%- if repoChargesHowPayOther -%}
          <p>We will carry the costs related to the used repositories by: {{ repoChargesHowPayOther }}{{ endswith(repoChargesHowPayOther, ".") ? "" : "." }}</p>
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}
    {# Budget time and effort #}
    {%- set budgetTimeEffortPath = join([preservingCUuid, budgetTimeEffortQUuid], ".") -%}
    {%- set budgetTimeEffortAUuid = repliesMap[budgetTimeEffortPath].value.value -%}
    {%- if budgetTimeEffortAUuid == budgetTimeEffortYesAUuid -%}
      <p>We have a reserved budget for the time and effort it will take to prepare the data for publication.</p>
    {%- endif -%}
  </div>
  {%- endscope -%}
</div>
