<div id="q-what-data" class="question">
  <h3>1. What data will you collect or create?</h3>
  {%- scope -%}
  <div class="answer">

            
  {# Create/collected data #}
  {%- set measuredDataPath = join([creatingCUuid, measuredDataQUuid], ".") -%}
  {%- set measuredDataCount = repliesMap[measuredDataPath].value.value -%}
  {# Measured datasets #}
  {%- if measuredDataCount > 0 -%}
    <div>
    <h4>Instrument datasets</h4>
    The following instrument datasets will be acquired in the project:
    <ul>
      {%- for datasetIndex in range(measuredDataCount - 1) -%}
        {%- set pathPrefix = join([measuredDataPath, datasetIndex], ".") -%}
        <li>
          {%- set measuredDataNamePath = join([pathPrefix, measuredDataNameQUuid], ".") -%}
          {%- set measuredDataName = repliesMap[measuredDataNamePath].value.value -%}
          {%- set measuredDataWhoPath = join([pathPrefix, measuredDataWhoQUuid], ".") -%}
          {%- set measuredDataWhoAUuid = repliesMap[measuredDataWhoPath].value.value -%}
          {%- set measuredDataEquipPath = join([pathPrefix, measuredDataEquipQUuid], ".") -%}
          {%- set measuredDataEquipAUuid = repliesMap[measuredDataEquipPath].value.value -%}
          <strong>{{ measuredDataName ? measuredDataName : "(no name given)" }}</strong>
          {# Who will collect #}
          {%- if measuredDataWhoAUuid == measuredDataWhoExpertsOwnAUuid -%}
            <p>This dataset will be collected by experts in the project, with our own equipment.</p>
          {%- elif measuredDataWhoAUuid == measuredDataWhoExpertsOutAUuid -%}
            <p>This dataset will be collected by experts in the project, at a specialized infrastructure.</p>
          {%- elif measuredDataWhoAUuid == measuredDataWhoExternalAUuid -%}
            {%- set mdExternalOwnershipPath = join([measuredDataWhoPath, measuredDataWhoExternalAUuid, mdExternalOwnershipQUuid], ".") -%}
            {%- set mdExternalOwnershipAUuid = repliesMap[mdExternalOwnershipPath].value.value -%}
            <p>
              This dataset will be collected by an external party.
              {% if mdExternalOwnershipAUuid == mdExternalOwnershipPartyAUuid -%}
                The ownership of the resulting data will remain with the external party.
              {%- elif mdExternalOwnershipAUuid == mdExternalOwnershipPartnersAUuid -%}
                The project partners acquire full ownership of the data.
              {%- elif mdExternalOwnershipAUuid == mdExternalOwnershipOtherAUuid -%}
                {%- set mdExternalOwnershipOtherPath = join([mdExternalOwnershipPath, mdExternalOwnershipOtherAUuid, mdExternalOwnershipOtherQUuid], ".") -%}
                {%- set mdExternalOwnershipOther = repliesMap[mdExternalOwnershipOtherPath].value.value -%}
                {%- if mdExternalOwnershipOther -%}
                  For the ownership of the data we have made the following arrangements: {{ mdExternalOwnershipOther }}{{ endswith(mdExternalOwnershipOther, ".") ? "" : "." }}
                {%- endif -%}
              {%- endif -%}
            </p>
          {%- endif -%}
          {# Equipment standard? #}
          {% if measuredDataEquipAUuid == measuredDataEquipDescribedAUuid -%}
            <p>The equipment is very well described and known.</p>
          {%- elif measuredDataEquipAUuid == measuredDataEquipCareAUuid -%}
            <p>The equipment is less well described or not completely standard, so we will need to take extra care documenting the process.</p>
          {%- endif -%}
        </li>
      {%- endfor -%}
    </ul>
    </div>
  {%- endif -%}
  {# Non-equipment datasets #}
  {%- set neqDataPath = join([creatingCUuid, neqDataQUuid], ".") -%}
  {%- set neqDataAUuid = repliesMap[neqDataPath].value.value -%}
  {%- if neqDataAUuid == neqDataYesAUuid -%}
    {%- set neqDataPrefix = join([neqDataPath, neqDataYesAUuid], ".") -%}
    {%- set neqDataQuestPath = join([neqDataPrefix, neqDataQuestQUuid], ".") -%}
    {%- set neqDataQuestAUuid = repliesMap[neqDataQuestPath].value.value -%}
    {%- set neqDataCaseReportPath = join([neqDataPrefix, neqDataCaseReportQUuid], ".") -%}
    {%- set neqDataCaseReportAUuid = repliesMap[neqDataCaseReportPath].value.value -%}
    {%- set neqDataERecordsPath = join([neqDataPrefix, neqDataERecordsQUuid], ".") -%}
    {%- set neqDataERecordsAUuid = repliesMap[neqDataERecordsPath].value.value -%}
    {%- set neqDataSetsPath = join([neqDataPrefix, neqDataSetsQUuid], ".") -%}
    {%- set neqDataSetsCount = repliesMap[neqDataSetsPath].value.value -%}
    {%- scope -%}
    {%- set questionnaires = neqDataQuestAUuid == neqDataQuestYesAUuid -%}
    {%- set caseReport = neqDataCaseReportAUuid == neqDataCaseReportYesAUuid -%}
    {%- set eRecords = neqDataERecordsAUuid == neqDataERecordsYesAUuid -%}
    {%- if questionnaires || caseReport || eRecords || neqDataSetsCount > 0 -%}
      <div>
      <h4>Non-equipment datasets</h4>
      {# Types #}
      {%- set typesBools = [questionnaires, caseReport, eRecords] -%}
      {%- set typesNames = ["questionnaires", "case report forms", "electronic patient records"] -%}
      {%- set types = map(filter(zip(typesBools, typesNames), (x) -> x[0]), (x) -> x[1]) -%}
      {%- set typesCount = length(types) -%}
      <p>
        {%- if typesCount > 0 -%}
          We also collect data from
          {% if typesCount == 1 -%}
              {{ types[0] }}.
          {%- elif typesCount == 2 -%}
              {{ types[0] }} and {{ types[1] }}.
          {%- else -%}
              {{ join(slice(types, 0, length(types)-1), ", ") }}, and {{ slice(types, -1) }}.
          {%- endif -%}
        {% endif %}
        {# Datasets #}
        {%- if neqDataSetsCount > 0 -%}
          The non-equipment datasets are:
          <ul>
          {%- for neqDataSetIndex in range(neqDataSetsCount - 1) -%}
            {%- set pathPrefix = join([neqDataSetsPath, neqDataSetIndex], ".") -%}
            {%- set neqDataSetsName = repliesMap[join([pathPrefix, neqDataSetsNameQUuid], ".")].value.value -%}
            {%- set neqDataSetsDesc = repliesMap[join([pathPrefix, neqDataSetsDescQUuid], ".")].value.value -%}
            <li>
              <strong>{{ neqDataSetsName ? neqDataSetsName : "(no name given)" }}</strong>
              {% if neqDataSetsDesc -%}<span class="separator">&ndash;</span> {{ neqDataSetsDesc }}{%- endif -%}
            </li>
          {%- endfor -%}
          </ul>
        {%- endif -%}
      </p>
      </div>
    {%- endif -%}
    {%- endscope -%}
  {%- endif -%}

  {%- set preexistingPath = join([reusingCUuid, preexistingQUuid], ".") -%}
  {%- set preexistingAUuid = repliesMap[preexistingPath].value.value -%}
  {%- if preexistingAUuid == preexistingYesAUuid -%}
    {%- set usingPreexistingPath = join([preexistingPath, preexistingYesAUuid, usingPreexistingQUuid], ".") -%}
    {%- set usingPreexistingAUuid = repliesMap[usingPreexistingPath].value.value -%}
    {%- if usingPreexistingAUuid == usingPreexistingYesAUuid -%}
      {%- set refDataPath = join([usingPreexistingPath, usingPreexistingYesAUuid, refDataQUuid], ".") -%}
      {%- set refDataCount = repliesMap[refDataPath].value.value -%}
      {%- set nrefDataPath = join([usingPreexistingPath, usingPreexistingYesAUuid, nrefDataQUuid], ".") -%}
      {%- set nrefDataCount = repliesMap[nrefDataPath].value.value -%}
      {%- if (refDataCount + nrefDataCount) > 0 -%}
        <div>
          <h4>Re-used datasets</h4>
          {%- if refDataCount > 0 -%}
            <div>We will use the following reference datasets:
            <ul>
              {%- for refDataIndex in range(refDataCount - 1) -%}
                {%- set refDataPrefix = join([refDataPath, refDataIndex], ".") -%}
                {%- set refDataNameReply = repliesMap[join([refDataPrefix, refDataNameQUuid], ".")] -%}
                {%- set refDataWhere = repliesMap[join([refDataPrefix, refDataWhereQUuid], ".")].value.value -%}
                <li>
                  {# identification #}
                  <strong>{{ integrationValue(refDataNameReply, refDataNameQUuid) }}</strong>
                  {%- if refDataWhere -%}
                    {%- if (slice(refDataWhere, 0, 7) == "http://") || (slice(refDataWhere, 0, 8) == "https://") || (slice(refDataWhere, 0, 6) == "ftp://") %}
                      (<a href="{{ refDataWhere }}" target="_blank">{{ refDataWhere }}</a>)
                    {%- else %}
                      ({{ refDataWhere }})
                    {%- endif -%}
                  {%- endif -%}
                  {# version #}
                  {%- set refDataVersionedPath = join([refDataPrefix, refDataVersionedQUuid], ".") -%}
                  {%- set refDataVersionedAUuid = repliesMap[refDataVersionedPath].value.value -%}
                  {%- if refDataVersionedAUuid == refDataVersionedYesAUuid -%}
                    {%- set refDataVersionedWhichPath = join([refDataVersionedPath, refDataVersionedYesAUuid, refDataVersionedWhichQUuid], ".") -%}
                    {%- set refDataVersionedWhich = repliesMap[refDataVersionedWhichPath].value.value -%}
                    {%- set refDataVersionedChangePath = join([refDataVersionedPath, refDataVersionedYesAUuid, refDataVersionedChangeQUuid], ".") -%}
                    {%- set refDataVersionedChangeAUuid = repliesMap[refDataVersionedChangePath].value.value -%}
                    {%- if refDataVersionedWhich || refDataVersionedChangeAUuid  %}
                      <p>
                      {% if refDataVersionedWhich -%}
                        We will use version "{{ refDataVersionedWhich }}" of this dataset.
                      {%- endif -%}
                      {%- if refDataVersionedChangeAUuid == refDataVersionedChangeStayAUuid %}
                        If a new version becomes available during the project, we will stay with the old version.
                      {%- elif refDataVersionedChangeAUuid == refDataVersionedChangeNewAUuid %}
                        If a new version becomes available during the project, new analyses will be done with the new version.
                      {%- elif refDataVersionedChangeAUuid == refDataVersionedChangeAllAUuid %}
                        If a new version becomes available during the project, all analyses will be redone with the new version.
                      {%- endif -%}
                      </p>
                    {%- endif -%}
                  {%- endif -%}
                </li>
              {%- endfor -%}
            </ul>
            </div>
          {%- endif -%}
          {%- if nrefDataCount > 0 -%}
            <div>We will use the following already existing non-reference datasets:
            <ul>
              {%- for nrefDataIndex in range(nrefDataCount - 1) -%}
                {%- set nrefDataNamePath = join([nrefDataPath, nrefDataIndex, nrefDataNameQUuid], ".") -%}
                {%- set nrefDataNameReply = repliesMap[nrefDataNamePath] -%}
                {%- set nrefDataWhere = repliesMap[join([nrefDataPrefix, nrefDataWhereQUuid], ".")].value.value -%}
                <li>
                  {# identification #}
                  <strong>{{ integrationValue(nrefDataNameReply, nrefDataNameQUuid) }}</strong>
                  {%- if nrefDataWhere -%}
                    {%- if (slice(nrefDataWhere, 0, 7) == "http://") || (slice(nrefDataWhere, 0, 8) == "https://") || (slice(nrefDataWhere, 0, 6) == "ftp://") %}
                      (<a href="{{ nrefDataWhere }}" target="_blank">{{ nrefDataWhere }}</a>)
                    {%- else %}
                      ({{ nrefDataWhere }})
                    {%- endif -%}
                  {%- endif -%}
                  {# data access #}
                  {%- set nrefDataAccessPath = join([nrefDataPath, nrefDataIndex, nrefDataAccessQUuid], ".") -%}
                  {%- set nrefDataAccessAUuid = repliesMap[nrefDataAccessPath].value.value -%}
                  {%- if nrefDataAccessAUuid %}
                    <p>
                    {% if nrefDataAccessAUuid == nrefDataAccessHaveCopyAUuid -%}
                      We already have a copy of this dataset.
                    {%- elif nrefDataAccessAUuid == nrefDataAccessWillDownloadAUuid -%}
                      We will download or get a copy.
                    {%- elif nrefDataAccessAUuid == nrefDataAccessWillOnlineAUuid -%}
                      We will use its online version without downloading it.
                    {%- endif -%}
                    </p>
                  {%- endif -%}
                </li>
              {%- endfor -%}
            </ul>
            </div>
          {%- endif -%}
        </div>
      {%- endif -%}
    {%- endif -%}
  {%- endif -%}
  {# Format/Type with volume #}
{%- set formatsQUuid = "b08fe063-33f8-4380-b3a9-ba1e586dedf2" -%}
{%- set formatsNameQUuid = "f00cf643-5368-458a-97d4-b463c2000c66" -%}
  {%- set formatsPath = join([creatingCUuid, formatsQUuid], ".") -%}
  {%- set formatsCount = repliesMap[formatsPath].value.value -%}
  {%- if formatsCount > 0 -%}
    <h4>Data formats and types</h4>
    <div>We will be using the following data formats and types:
    <ul>
      {%- for formatIndex in range(formatsCount - 1) -%}
        {%- set formatPrefix = join([formatsPath, formatIndex], ".") -%}
        {%- set formatNameReply = repliesMap[join([formatPrefix, formatsNameQUuid], ".")] -%}
        {%- set formatsIsStandardPath = join([formatPrefix, formatsIsStandardQUuid], ".") -%}
        {%- set formatsIsStandardAUuid = repliesMap[formatsIsStandardPath].value.value -%}
        {%- set formatsIsLTSuitablePath = join([formatPrefix, formatsIsLTSuitableQUuid], ".") -%}
        {%- set formatsIsLTSuitableAUuid = repliesMap[formatsIsLTSuitablePath].value.value -%}
        {%- set formatsVolumePath = join([formatPrefix, formatsVolumeQUuid], ".") -%}
        {%- set formatsVolumeAUuid = repliesMap[formatsVolumePath].value.value -%}
        <li>
          {# identification #}
          <strong>{{ integrationValue(formatNameReply, formatsNameQUuid) }}</strong>
          {%- if formatsIsStandardAUuid || formatsIsLTSuitableAUuid || formatsVolumeAUuid -%}
            <p>
            {# standard? #}
            {%- if formatsIsStandardAUuid == formatsIsStandardYesAUuid %}
              It is a standardized format.
            {%- elif formatsIsStandardAUuid == formatsIsStandardNoAUuid -%}
              {%- set formatsWhyNonStandardPath = join([formatsIsStandardPath, formatsIsStandardNoAUuid, formatsWhyNonStandardQUuid], ".") -%}
              {%- set formatsWhyNonStandardAUuid = repliesMap[formatsWhyNonStandardPath].value.value -%}
              {%- if formatsWhyNonStandardAUuid == formatsWhyNSThereIsNoStandardAUuid %}
                It is not a standardized format because there is no standardized format for this data type.
              {%- elif formatsWhyNonStandardAUuid == formatsWhyNSItIsOptimizedAUuid %}
                It is not a standardized format but it is optimized for processing speed and/or volume.
              {%- elif formatsWhyNSAnotherReasonAUuid == formatsWhyNSAnotherReasonAUuid -%}
                {%- set formatsWhyNSAnotherReasonPath = join([formatsWhyNonStandardPath, formatsWhyNSAnotherReasonAUuid, formatsWhyNSAnotherReasonQUuid], ".") -%}
                {%- set formatsWhyNSAnotherReason = repliesMap[formatsWhyNSAnotherReasonPath].value.value -%}
                It is not a standardized format.
                {%- if formatsWhyNSAnotherReason %}
                  {{ capitalize(formatsWhyNSAnotherReason) }}{{ endswith(formatsWhyNSAnotherReason, ".") ? "" : "." }}
                {%- endif -%}
              {%- endif -%}
            {%- endif -%}
            {# long-term suitable? #}
            {%- if formatsIsLTSuitableAUuid == formatsIsLTSuitableYesAUuid %}
              This is a suitable format for long-term archiving.
            {%- elif formatsIsLTSuitableAUuid == formatsIsLTSuitableNoAUuid -%}
              {%- set formatsConvertLTSuitablePath = join([formatsIsLTSuitablePath, formatsIsLTSuitableNoAUuid, formatsConvertLTSuitableQUuid], ".") -%}
              {%- set formatsConvertLTSuitableAUuid = repliesMap[formatsConvertLTSuitablePath].value.value -%}
              {%- if formatsConvertLTSuitableAUuid == formatsConvertLTSuitableYesAUuid %}
                This is not a suitable format for long-term archiving; however, we plan to convert it to a suitable format before the end of the project.
              {%- elif formatsConvertLTSuitableAUuid == formatsConvertLTSuitableNoAUuid %}
                We are aware that this is not a suitable format for long-term archiving.
              {%- endif -%}
            {%- endif -%}
            {# volume #}
            {%- if formatsVolumeAUuid == formatsVolumeSmallAUuid %}
              We will have only a small amount of data stored in this format.
            {%- elif formatsVolumeAUuid == formatsVolumeTotalAUuid -%}
              {%- set formatsVolumeTotalGB = repliesMap[join([formatsVolumePath, formatsVolumeTotalAUuid, formatsVolumeTotalGBQUuid], ".")].value.value -%}
              {%- if formatsVolumeTotalGB %}
                We expect to have {{ formatsVolumeTotalGB }} GB of data in this format.
              {%- endif -%}
            {%- elif formatsVolumeAUuid == formatsVolumeFileSizeAUuid -%}
              {%- set formatsVolumeFiles = repliesMap[join([formatsVolumePath, formatsVolumeFileSizeAUuid, formatsVolumeFilesQUuid], ".")].value.value -%}
              {%- set formatsVolumeFileGB = repliesMap[join([formatsVolumePath, formatsVolumeFileSizeAUuid, formatsVolumeFileGBQUuid], ".")].value.value -%}
              {%- if formatsVolumeFiles && formatsVolumeFileGB %}
                We expect to have {{ formatsVolumeFiles }} files of average size {{ formatsVolumeFileGB }} GB (i.e. approximatelly {{ formatsVolumeFiles * formatsVolumeFileGB }} GB in total).
              {%- endif -%}
            {%- endif -%}
            </p>
          {%- endif -%}
        </li>
      {%- endfor -%}
    </ul>
    </div>
  {%- endif -%}
  </div>
  {%- endscope -%}
</div>
