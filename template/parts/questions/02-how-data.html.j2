<div id="q-how-data" class="question">
  <h3>2. How will the data be collected or created?</h3>
  {%- scope -%}
  <div class="answer">
  {# Measured datasets #}
  {%- set measuredDataPath = join([creatingCUuid, measuredDataQUuid], ".") -%}
  {%- set measuredDataCount = repliesMap[measuredDataPath].value.value -%}
  {%- if measuredDataCount > 0 -%}
    <h4>Instrument datasets</h4>
    <ul>
      {%- for datasetIndex in range(measuredDataCount - 1) -%}
        {%- set pathPrefix = join([measuredDataPath, datasetIndex], ".") -%}
        <li>
          {%- set measuredDataNamePath = join([pathPrefix, measuredDataNameQUuid], ".") -%}
          {%- set measuredDataName = repliesMap[measuredDataNamePath].value.value -%}
          <strong>{{ measuredDataName ? measuredDataName : "(no name given)" }}</strong>
          {# Instruments #}
          {%- set measuredDataInstrPath = join([pathPrefix, measuredDataInstrQUuid], ".") -%}
          {%- set measuredDataInstrCount = repliesMap[measuredDataInstrPath].value.value -%}
          {%- if measuredDataInstrCount > 0 -%}
            <p>For this dataset, we are using the following instruments:
            <ul>
              {%- for instrIndex in range(measuredDataInstrCount - 1) -%}
                {%- set instrPathPrefix = join([measuredDataInstrPath, instrIndex], ".") -%}
                <li>
                  {%- set measuredDataInstrNamePath = join([instrPathPrefix, measuredDataInstrNameQUuid], ".") -%}
                  {%- set measuredDataInstrName = repliesMap[measuredDataInstrNamePath].value.value -%}
                  {%- set measuredDataInstrDescPath = join([instrPathPrefix, measuredDataInstrDescQUuid], ".") -%}
                  {%- set measuredDataInstrDesc = repliesMap[measuredDataInstrDescPath].value.value -%}
                  <strong>{{ measuredDataInstrName }}</strong>
                  {% if measuredDataInstrName && measuredDataInstrDesc -%}<span class="separator">&ndash;</span>{%- endif %}
                  {{ measuredDataInstrDesc }}
                </li>
              {%- endfor -%}
            </ul>
            </p>
          {%- else -%}
            <p>No instruments for this dataset have been specified.</p>
          {%- endif -%}
          {# Quality #}
          {%- set measuredDataQualityPath = join([pathPrefix, measuredDataQualityQUuid], ".") -%}
          {%- set measuredDataQualityAUuid = repliesMap[measuredDataQualityPath].value.value -%}
          {%- if measuredDataQualityAUuid == measuredDataQualityNoAUuid -%}
            <p>We will not be using quality process for this dataset.</p>
          {%- elif measuredDataQualityAUuid == measuredDataQualityYesAUuid -%}
            {# Named quality processes #}
            {%- set mdqPrefix = join([measuredDataQualityPath, measuredDataQualityYesAUuid], ".") -%}
            {%- set calibrating = repliesMap[join([mdqPrefix, mdQualityCalibatingQUuid], ".")].value.value == mdQualityCalibatingYesAUuid -%}
            {%- set repetition = repliesMap[join([mdqPrefix, mdQualityRepetitionQUuid], ".")].value.value == mdQualityRepetitionYesAUuid -%}
            {%- set standardized = repliesMap[join([mdqPrefix, mdQualityStandardizedQUuid], ".")].value.value == mdQualityStandardizedYesAUuid -%}
            {%- set validation = repliesMap[join([mdqPrefix, mdQualityValidationQUuid], ".")].value.value == mdQualityValidationYesAUuid -%}
            {%- set peerReview = repliesMap[join([mdqPrefix, mdQualityPeerReviewQUuid], ".")].value.value == mdQualityPeerReviewYesAUuid -%}
            {%- set vocabularies = repliesMap[join([mdqPrefix, mdQualityVocabulariesQUuid], ".")].value.value == mdQualityVocabulariesYesAUuid -%}
            {%- set qualityProcesses = [calibrating, repetition, standardized, validation, peerReview, vocabularies] -%}
            {%- set qualityCount = length(filter(qualityProcesses, (x) -> x)) -%}
            {%- if qualityCount == 1 -%}
              <p>
                We will be using
                {% if calibrating -%}
                  calibrating measurements
                {%- endif -%}
                {%- if repetition -%}
                  repeat samples/measurements
                {%- endif -%}
                {%- if standardized -%}
                  standardized data capture/recording
                {%- endif -%}
                {%- if validation -%}
                  <em>Data Entry</em> validation
                {%- endif -%}
                {%- if peerReview -%}
                  data peer review
                {%- endif -%}
                {%- if vocabularies -%}
                  controlled vocabularies
                {%- endif %}
                quality process.
              </p>
            {%- elif qualityCount > 1 -%}
              <p>
              We will be using the following quality processes:
              <ul>
                {%- if calibrating -%}
                  <li>calibrating measurements</li>
                {%- endif -%}
                {%- if repetition -%}
                  <li>repeat samples/measurements</li>
                {%- endif -%}
                {%- if standardized -%}
                  <li>standardized data capture/recording</li>
                {%- endif -%}
                {%- if validation -%}
                  <li><em>Data Entry</em> validation</li>
                {%- endif -%}
                {%- if peerReview -%}
                  <li>data peer review</li>
                {%- endif -%}
                {%- if vocabularies -%}
                  <li>controlled vocabularies</li>
                {%- endif -%}
              </ul>
              </p>
            {%- else -%}
              <p>We will be using quality processes.<p>
            {%- endif -%}
            {# Other quality processes #}
            {%- set mdQualityOtherPath = join([mdqPrefix, mdQualityOtherQUuid], ".") -%}
            {%- set mdQualityOtherAUuid = repliesMap[mdQualityOtherPath].value.value -%}
            {%- if mdQualityOtherAUuid == mdQualityOtherYesAUuid -%}
              {%- set mdQualityOtherYesPath = join([mdQualityOtherPath, mdQualityOtherYesAUuid, mdQualityOtherYesQUuid], ".") -%}
              {%- set mdQualityOther = repliesMap[mdQualityOtherYesPath].value.value -%}
              {%- if mdQualityOther -%}
                <p>{{ qualityCount > 0 ? "Additional" : "Our" }} quality processes are: {{ mdQualityOther }}</p>
              {%- endif -%}
            {%- endif -%}
          {%- endif -%}
        </li>
      {%- endfor -%}
    </ul>
  {%- else -%}
    There will be no instrument dataset in this project.
  {%- endif -%}
  {# Storage and file conventions #}
  {%- set storageConvPath = join([processingCUuid, storageConvQUuid], ".") -%}
  {%- set storageConvAUuid = repliesMap[storageConvPath].value.value -%}
  {%- if storageConvAUuid == storageConvExploreAUuid -%}
    {%- set stConvPrefix = join([storageConvPath, storageConvExploreAUuid], ".") -%}
    {%- set storageConvFSysPath = join([stConvPrefix, storageConvFSysQUuid], ".") -%}
    {%- set storageConvFSysAUuid = repliesMap[storageConvFSysPath].value.value -%}
    {%- set storageConvObjStorePath = join([stConvPrefix, storageConvObjStoreQUuid], ".") -%}
    {%- set storageConvObjStoreAUuid = repliesMap[storageConvObjStorePath].value.value -%}
    {%- set storageConvRelDbPath = join([stConvPrefix, storageConvRelDbQUuid], ".") -%}
    {%- set storageConvRelDbAUuid = repliesMap[storageConvRelDbPath].value.value -%}
    {%- set storageConvGraphDbPath = join([stConvPrefix, storageConvGraphDbQUuid], ".") -%}
    {%- set storageConvGraphDbAUuid = repliesMap[storageConvGraphDbPath].value.value -%}
    {%- set storageConvTripleStorePath = join([stConvPrefix, storageConvTripleStoreQUuid], ".") -%}
    {%- set storageConvTripleStoreAUuid = repliesMap[storageConvTripleStorePath].value.value -%}
    {%- if storageConvFSysAUuid || storageConvObjStoreAUuid || storageConvRelDbAUuid || storageConvGraphDbAUuid || storageConvTripleStoreAUuid -%}
      <h4>Storage and file conventions</h4>
      {# File System #}
      <p>
      {%- if storageConvFSysAUuid == storageConvFSysNoAUuid -%}
        We will not use a filesystem with files and folders.
      {%- elif storageConvFSysAUuid == storageConvFSysYesAUuid -%}
        {%- set scFSysPrefix = join([storageConvFSysPath, storageConvFSysYesAUuid], ".") -%}
        {# Folder types #}
        {%- set scFSysSubjFoldersPath = join([scFSysPrefix, scFSysSubjFoldersQUuid], ".") -%}
        {%- set scFSysSubjFoldersAUuid = repliesMap[scFSysSubjFoldersPath].value.value -%}
        {%- set scFSysAnalysisFoldersPath = join([scFSysPrefix, scFSysAnalysisFoldersQUuid], ".") -%}
        {%- set scFSysAnalysisFoldersAUuid = repliesMap[scFSysAnalysisFoldersPath].value.value -%}
        {%- set scFSysWorkflowStepFoldersPath = join([scFSysPrefix, scFSysWorkflowStepFoldersQUuid], ".") -%}
        {%- set scFSysWorkflowStepFoldersAUuid = repliesMap[scFSysWorkflowStepFoldersPath].value.value -%}
        {%- set subjectFolders = scFSysSubjFoldersAUuid == scFSysSubjFoldersYesAUuid -%}
        {%- set analysisFolders = scFSysAnalysisFoldersAUuid == scFSysAnalysisFoldersYesAUuid -%}
        {%- set workflowStepFolders = scFSysWorkflowStepFoldersAUuid == scFSysWorkflowStepFoldersYesAUuid -%}
        {%- set folders = [subjectFolders, analysisFolders, workflowStepFolders] -%}
        {%- set foldersCount = length(filter(folders, (x) -> x)) -%}
        {%- if foldersCount > 0 -%}
          We will use a filesystem with files and folders with the following folder conventions:
          <ul>
            {%- if subjectFolders -%}
              {%- set scFSysSubjFoldersConvs = repliesMap[join([scFSysSubjFoldersPath, scFSysSubjFoldersYesAUuid, scFSysSubjFoldersConvsQUuid], ".")].value.value -%}
              <li>
                There will be a <strong>folder for each sample/subject</strong>.
                {% if scFSysSubjFoldersConvs %}
                  Each of those will use the following conventions: {{ scFSysSubjFoldersConvs }}{{ endswith(scFSysSubjFoldersConvs, ".") ? "" : "." }}
                {%- endif -%}
              </li>
            {%- endif -%}
            {%- if analysisFolders -%}
              {%- set scFSysAnalysisFoldersConvs = repliesMap[join([scFSysAnalysisFoldersPath, scFSysAnalysisFoldersYesAUuid, scFSysAnalysisFoldersConvsQUuid], ".")].value.value -%}
              <li>
                There will be  a <strong>(sub)folder for each (repeated) analysis</strong>. 
                {% if scFSysAnalysisFoldersConvs %}
                  Each of those will use the following conventions: {{ scFSysAnalysisFoldersConvs }}{{ endswith(scFSysAnalysisFoldersConvs, ".") ? "" : "." }}
                {%- endif -%}
              </li>
            {%- endif -%}
            {%- if workflowStepFolders -%}
              {%- set scFSysWorkflowStepFoldersConvs = repliesMap[join([scFSysWorkflowStepFoldersPath, scFSysWorkflowStepFoldersYesAUuid, scFSysWorkflowStepFoldersConvsQUuid], ".")].value.value -%}
              <li>
                There will be a <strong>(sub)folder for each step in the analysis workflow</strong>.
                {% if scFSysWorkflowStepFoldersConvs %}
                  Each of those will use the following conventions: {{ scFSysWorkflowStepFoldersConvs }}{{ endswith(scFSysWorkflowStepFoldersConvs, ".") ? "" : "." }}
                {%- endif -%}
              </li>
            {%- endif -%}
          </ul>
        {%- else -%}
          We will use a filesystem with files and folders.
        {%- endif -%}
        {# Other appointments #}
        {%- set scFSysAppointmentsPath = join([scFSysPrefix, scFSysAppointmentsQUuid], ".") -%}
        {%- set scFSysAppointments = repliesMap[scFSysAppointmentsPath].value.value -%}
        {%- if scFSysAppointments %}
          {{ foldersCount > 0 ? "Moreover, we" : "We" }} have made appointments about naming the files. {{ appointmentsText|capitalize }}{{ (appointmentsText && (endswith(appointmentsText, ".") == False)) ? "." : "" }}
        {%- endif -%}
      {%- endif -%}
      </p>
      {# Object Store #}
      <p>
      {%- if storageConvObjStoreAUuid == storageConvObjStoreNoAUuid -%}
        We will not be storing data in an "object store" system.
      {%- elif storageConvObjStoreAUuid == storageConvObjStoreYesAUuid -%}
        {%- set scObjStoreNamingQUuid = join([storageConvObjStorePath, storageConvObjStoreYesAUuid, scObjStoreNamingQUuid], ".") -%}
        {%- set scObjStoreNaming = repliesMap[scObjStoreNamingQUuid].value.value -%}
        {%- if scObjStoreNaming -%} 
          We will be storing data in an "object store" system using following naming conventions for objects in the store: {{ scObjStoreNaming }}{{ (endswith(scObjStoreNaming, ".") == False) ? "." : "" }}
        {%- else -%}
          We will be storing data in an "object store" system.
        {%- endif -%}
      {%- endif -%}
      </p>
      {# Relational Database #}
      <p>
      {%- if storageConvRelDbAUuid == storageConvRelDbNoAUuid -%}
        We will not use a relational database system to store project data.
      {%- elif storageConvRelDbAUuid == storageConvRelDbYesAUuid -%}
        We will use a relational database system to store project data.
        {%- set scRelDbHandleChangesPath = join([storageConvRelDbPath, storageConvRelDbYesAUuid, scRelDbHandleChangesQUuid], ".") -%}
        {%- set scRelDbHandleChangesAUuid = repliesMap[scRelDbHandleChangesPath].value.value -%}
        {%- if scRelDbHandleChangesAUuid == scRelDbReadOnlyAnswerUuid %}
          Data in the database will be read-only.
        {%- elif scRelDbHandleChangesAUuid == scRelDbCrudAnswerUuid %}
          We will be allowing Create, Update and Delete operations for data in the database.
        {%- elif scRelDbHandleChangesAUuid == scRelDbExpireAnswerUuid %}
          Modifications will be made by <em>Expiring</em> the existing data and <em>Adding</em> updated data.
        {%- endif -%}
      {%- endif -%}
      </p>
      {# Graph Database #}
      <p>
      {%- if storageConvGraphDbAUuid == storageConvGraphDbNoAUuid -%}
        We will not use a graph database for data in the project.
      {%- elif storageConvGraphDbAUuid == storageConvGraphDbYesAUuid -%}
        We will use a graph database for data in the project.
      {%- endif -%}
      </p>
      {# Triple Store #}
      <p>
      {%- if storageConvTripleStoreAUuid == storageConvTripleStoreNoAUuid -%}
        We will not be storing data in a triple store.
      {%- elif storageConvTripleStoreAUuid == storageConvTripleStoreYesAUuid -%}
        We will be storing data in a triple store.
      {%- endif -%}
      </p>
    {%- endif -%}
  {%- endif -%}
  </div>
  {%- endscope -%}
</div>
